{% extends 'admin/layout' %}
{% block body %}
<div class="row-fluid">
    <div class="span12 admin-box-full">
      <h2>Liquid level sensors</h2>
        <div class="alert" id="status-message" style="display: none"></div>
        <span class="help-block">
            <p>
            Each dispenser’s threshold for “out” and “low” levels can be set to your preferences.
            </p>
            <ol>
            <li>Insert sensor tube into a bottle or glass of water.</li>
            <li>Lift tube to desired "low" threshold, press corresponding save button.</li>
            <li>Repeat step 2 with "out" threshold.</li>
            </ol>
            <p>
            Make sure that the tube is actually in liquid when you hit save, or you'll make bad drinks! (greater than 80)
            </p>
        </span>
        {% for i in range(1, count + 1) %}
            <div style="padding-bottom: 10px">
                <span class="ll-dispenser-number">{{i}}:</span>
                <input type="text" 
                       id="ll-current-value-low-{{ i }}" 
                       class="ll-calibrate-textbox"
                       value="{{ thresholds[i-1][0] }}"
                       readonly>
                </input> 
                <a class="btn btn-large ll-column-spacer" onclick="save_threshold({{ i }}, 1)">save liquid low threshold</a>
                <input type="text" 
                       id="ll-current-value-out-{{ i }}" 
                       class="ll-calibrate-textbox" 
                       value="{{ thresholds[i-1][1] }}"
                       readonly>
                </input> 
                <a class="btn btn-large" onclick="save_threshold({{ i }}, 0)">save liquid out threshold</a>
            </div>
        {% endfor %}
        <div style="margin-top: 10px">
            <span class="help-block">
               If you're a calibration ninja, like the Partyrobotics team, you can calibrate all the sensors in one go:
            </span>
            <a class="btn btn-large btn-warning" style="margin-left: 30px" onclick="save_all_thresholds(1)">save all liquid low thresholds</a>
            <a class="btn btn-large btn-warning" style="margin-left: 30px" onclick="save_all_thresholds(0)">save all liquid out thresholds</a>
        </div>
  </div>
</div>
<script type="text/javascript" src="/static/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
$(document).ready(function() 
{
    $("#status-message").hide();
});
function set_message(txt)
{
    $("#status-message").text(txt);
    $("#status-message").show();
}
function save_threshold(disp, low)
{
    attr = (low ? "low" : "out");
    url = "/ws/liquidlevel/" + attr + "/" + (disp - 1) + "/set";
    $.ajax({
            url: url,
            success: function(html)
            {
                set_message("saved liquid " + attr + " threshold for dispenser " + disp);
                $("#ll-current-value-" + attr + "-" + disp).val(html);
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                set_message("Failed to save threshold for dispenser " + disp + ". Status: " + xhr.status);
            }
    });
}

function save_all_thresholds(low)
{
    attr = (low ? "low" : "out");
    url = "/ws/liquidlevel/" + attr + "/all/set";
    $.ajax({
            url: url,
            dataType : "json",
            success: function(json)
            {
                thresholds = json['levels'];
                set_message("saved liquid " + attr + " threshold for all dispensers");
                for(i = 0; i < {{ count }}; i++)
                    $("#ll-current-value-" + attr + "-" + (i + 1)).val(thresholds[i]);
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                set_message("Failed to save threshold for all dispensers. Status: " + xhr.status);
            }
    });
}

// Hidden feature for anyone who wants a test button. :)
function test_threshold(disp)
{
    url = "/ws/liquidlevel/test/" + (disp - 1);
    $.ajax({
            url: url,
            success: function(html)
            {
                set_message("test complete.");
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                set_message("Failed to test dispenser " + disp + ". Status: " + xhr.status);
            }
    });
}
</script>
{% endblock %}
