{% extends 'admin/layout' %}
{% block body %}
<div class="row-fluid">
    <div class="span6 admin-box">
        <h2>{{ title }}</h2>
        <div class="alert" id="status-message" style="display: none"></div>
        <form id="drink-form">
            <fieldset>
                <input type="hidden" id="drink-id"" value="0"></input>
                <div>
                    <label>Name</label>
                    <input id="drink-name" name="drink-name" type="text"  style="width: 75%"></input>
                </div>
                <div>
                    <label>Description</label>
                    <textarea id="drink-desc" name="drink-desc" style="width: 75%"></textarea>
                </div>
                <div>
                    <label class="checkbox">
                        <input id="drink-popular" name="popular" type="checkbox"> </input>
                        List this drink in <i>the essentials</i> section.
                    </label>
                </div>

                <div>
                    <label class="checkbox">
                        <input id="drink-available" name="available" type="checkbox"></input>
                        List this drink in the menu
                    </label>
                </div>

                <span class="help-block" style="margin-top: 20px">
                    List the ingredients to your drink below by selecting a booze and entering 
                    the number of <em>parts</em> for this booze.
                    If you need another booze, click the <em>add booze</em> button. To remove a 
                    booze, set its parts to 0.
                </span>

                <div style="display: none" id="template-booze-line">
                    <select class="select-field" name="select-field" id="template-booze-select" 
                            style="width:75%" onchange="update_taster_button()">
                    {% for booze_list_id, booze_list_name in booze_list %}
                        <option value="{{ booze_list_id }}">{{ booze_list_name }}</option>
                    {% endfor %}
                    </select>
                    <input class="edit-field" name="template-booze-parts" id="template-booze-parts" 
                           type="text"></input>
                    <input type="hidden" id="template-old-booze-id" name="template-old-booze-id" value="0"></input>
                </div>

                <div>
                   Booze
                   <div style="float: right; margin-right: 16%">Parts</div>
                </div>

                <div id="booze-lines" style="clear: both">
                </div>

                <div class="div-spacer">
                    <a class="btn btn-large" id="add-booze-button" onclick="add_booze()">add booze</a>
                    <a class="btn btn-large" onclick="cancel()">cancel</a>
                    <a class="btn btn-large btn-success" id="taster" onclick="taster()">taster</a>
                    <a class="btn btn-large btn-primary submit-button" onclick="save()">save</a>
                </div>
            </fieldset>
        </form>
    </div>
    <div class="span6 admin-box">
        <div style="float: right; padding-top: 10px;">
        <a href="/admin/drink" class="btn btn-large">add new drink</a>
        </div>
        <h2>Drink list</h2>
	<table class="table table-striped table-bordered" id="drinks-table">
            {% for d in drinks %}
              <tr id="drink-row-{{d.id}}"><td><a href="#" id="booze-link-{{d.id}}" onclick="edit({{d.id}})">{{ d.name.name }}</a></td></tr>
            {% endfor %}
        </table>
    </div>
</div>
<script type="text/javascript" src="/static/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="/static/js/jquery.validate.1.11.1.min.js"></script>
<script type="text/javascript">
var num_boozes = 0;
var taster_valid = 0;

var rules = {
                'drink-name' : {
                     required: true,
                    minlength: 2
                },
                'drink-desc' : {
                     required: true,
                    minlength: 4
                }
            };

var booze_ids = [];
{% for disp in dispensers %}
   booze_ids[{{ loop.index0 }}] = {{ disp.booze.id }};
{% endfor %}

$(document).ready(function() 
{
    $("#drink-form").validate({
         rules: rules
    });
    $("#status-message").hide();
    add_booze();
    update_taster_button();
});

function set_message(txt)
{
    $("#status-message").text(txt);
    $("#status-message").show();
}
function clear_message(txt)
{
    $("#status-message").text("");
    $("#status-message").hide();
}

function add_booze()
{
    var i = 0;

    $("#template-booze-line").children().clone(true).appendTo("#booze-lines");
    $("#booze-lines #template-booze-select").attr("id", "selected-booze-id-" + num_boozes);
    $("#booze-lines #template-booze-select").attr("name", "selected-booze-id-" + num_boozes);
    $("#booze-lines #template-booze-parts").attr("id", "booze-parts-" + num_boozes);
    $("#booze-lines #template-booze-parts").attr("name", "booze-parts-" + num_boozes);
    $("#booze-lines #template-old-booze-id").attr("id", "old-booze-id-" + num_boozes);
    $("#booze-lines #template-old-booze-id").attr("name", "old-booze-id-" + num_boozes);
    $("#booze-parts-" + num_boozes).change(update_taster_button);

    // Add the new parts box to the validation
    $("#booze-parts-" + num_boozes).rules('add', { required : true, minlength : 1, maxlength : 3, digits : true });

    num_boozes++;
}

function edit(drink_id)
{
    $.ajax({
            url: "/ws/drink/" + drink_id + "/load",
            dataType : "json",
            success: function(json)
            {
                load_form(json);
                clear_message();
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                set_message("Failed to load drink. Status: " + xhr.status);
            }
    });
    return false;
}

function load_form(drink)
{
    new_drink_num_boozes = drink['num_boozes'];

    $("#drink-id").val(drink['id']);
    $("#drink-name").val(drink['name']);
    $("#drink-desc").val(drink['desc']);
    if (drink['available'])
        $("#drink-available").prop("checked", true);
    else
        $("#drink-available").prop("checked", false);
    if (drink['popular'])
        $("#drink-popular").prop("checked", true);
    else
        $("#drink-popular").prop("checked", false);

    $("#booze-lines").html("");
    num_boozes = 0;
    for(i = 0; i < new_drink_num_boozes; i++)
    {
        add_booze();
        $("#selected-booze-id-" + i).val(drink.boozes[i][0]);
        $("#booze-parts-" + i).val(drink.boozes[i][1]);
        $("#old-booze-id-" + i).val(drink.boozes[i][0]); 
    }
    $("#drink-form").valid();
    update_taster_button();
}

function get_current_drink_data()
{
    drink = {};
    drink['id'] = $("#drink-id").val();
    drink['name'] = $("#drink-name").val();
    drink['desc'] = $("#drink-desc").val();
    drink['available'] = $("#drink-available").prop("checked") ? 1 : 0;
    drink['popular'] = $("#drink-popular").prop("checked") ? 1 : 0;
    drink['boozes'] = [];
    for(i = 0; i < num_boozes; i++)
    { 
        drink['boozes'].push([ $("#selected-booze-id-" + i).val(), 
                               $("#booze-parts-" + i).val() ,
                               $("#old-booze-id-" + i).val() 
                             ]);
    }

    return drink;
}

function save()
{
    if (!$("#drink-form").valid())
        return;

    drink = get_current_drink_data();
    $.ajax({
            url: "/ws/drink/" + drink['id'] + "/save",
            type: "POST",
            data : JSON.stringify({'drink' : drink}),
            dataType : "json",
            contentType: "application/json; charset=utf-8",
            success: function(json)
            {
                load_form(json);
                set_message(drink['name'] + " has been saved.");
                update_drink_list(drink['id'], json['id'], drink['name']);
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                set_message("Failed to save drink. Status: " + xhr.status);
            }
    });
}

function sortAlpha(a,b)
{  
    return a.cells[0].innerText.toLowerCase() > b.cells[0].innerText.toLowerCase() ? 1 : -1;  
}
function update_drink_list(old_drink_id, new_drink_id, name)
{
    last_id = -1;
    last_name = "";

    $("#drink-row-" + old_drink_id).remove();
    tr = $('<tr id="drink-row-' + new_drink_id + '"><td><a href="#" id="booze-link-' + new_drink_id + '" onclick="edit(' + new_drink_id + ')">' + name + '</a></td></tr>');
    $('#drinks-table tr:last').after(tr);
    $('#drinks-table').html($('#drinks-table tr').sort(sortAlpha));
}

function cancel()
{
    $("#drink-id").val("");
    $("#drink-name").val("");
    $("#drink-desc").val("");
    $("#drink-available").prop("checked", false);
    $("#drink-popular").prop("checked", false);
    $("#booze-lines").html("");
    num_boozes = 0;
}

function update_taster_button()
{
    drink = get_current_drink_data();

    ok = 1;
    for(i = 0; i < num_boozes; i++)
    {
        booze_id = parseInt($("#selected-booze-id-" + i).val());
        found = 0;
        for(j = 0; j < {{ count }}; j++)
        {
            if (booze_ids[j] == booze_id)
            {
                found = 1;
                break;
            }
        }
        if (!found)
        {
            ok = 0;
            break;
        }

        parts = $("#booze-parts-" + i).val();
        if (!parts)
        {
            ok = 0;
            break;
        }
        parts = parseInt(parts);
        if (parts < 1 || parts > 1000)
        {
            ok = 0;
            break;
        }
    }

    taster_valid = ok;
    if (ok)
       $("#taster").removeAttr("disabled");
    else
       $("#taster").attr("disabled", "disabled");
}

function taster()
{
    if (!taster_valid)
        return;

    drink = get_current_drink_data();

    total = 0
    for(i = 0; i < drink.boozes.length; i++)
        total += parseInt(drink.boozes[i][1]);

    for(i = 0; i < drink.boozes.length; i++)
    {
        ml = Math.round({{ options.taster_size }} * parseInt(drink.boozes[i][1]) / total); 
        if (i == 0)
            args = "?";
        else 
            args += "&";
        args += "booze" + drink.boozes[i][0] + "=" + ml;
    }

    url = "/ws/drink/custom"; 
    $.ajax({
            url: url + args,
            success: function(html)
            {
                set_message("Dispensed taster. Bottoms up!");
            },
            error: function(xmlhttp, textStatus, error)
            {
                if (xmlhttp.status == 500)
                    set_message("Server error on dispensing taster!");
                else
                if (xmlhttp.status == 503)
                    set_message("Bartendro was busy. No drinks for you!");
                else
                if (xmlhttp.status == 400)
                    set_message("Bartendro can't make this taster. Outta booze?");
                else
                    set_message("Uhm. Something unique and interesting is happening. Something not so good: " + xmlhttp.status);
            }
    });
}
</script>
{% endblock %}
